- var colors = [
-   'aqua',
-   'black',
-   'blue',
-   'fuchsia',
-   'gray',
-   'green',
-   'lime',
-   'maroon',
-   'navy',
-   'olive',
-   'orange',
-   'purple',
-   'red',
-   'silver',
-   'teal',
-   'white',
-   'yellow',
- ]
- var effects = [
-        "flash", "bounce", "shake", "tada", "swing", "wobble",
-        "wiggle", "pulse", "flip", "flipInX", "flipOutX", "flipInY",
-        "flipOutY", "fadeIn", "fadeInUp", "fadeInDown", "fadeInLeft",
-        "fadeInRight", "fadeInUpBig", "fadeInDownBig", "fadeInLeftBig",
-        "fadeInRightBig", "fadeOut", "fadeOutUp", "fadeOutDown",
-        "fadeOutLeft", "fadeOutRight", "fadeOutUpBig", "fadeOutDownBig",
-        "fadeOutLeftBig", "fadeOutRightBig", "bounceIn", "bounceInDown",
-        "bounceInUp", "bounceInLeft", "bounceInRight", "bounceOut",
-        "bounceOutDown", "bounceOutUp", "bounceOutLeft", "bounceOutRight",
-        "rotateIn", "rotateInDownLeft", "rotateInDownRight",
-        "rotateInUpLeft", "rotateInUpRight", "rotateOut", "rotateOutDownLeft",
-        "rotateOutDownRight", "rotateOutUpLeft", "rotateOutUpRight",
-        "lightSpeedIn", "lightSpeedOut", "hinge", "rollIn", "rollOut"
-    ]
- var animations = [
-        i18n.gettext('none'),
-        i18n.gettext('marquee'),
-        i18n.gettext('onebyone'),
-     ]


mixin positions
    tr
        th
            label(for="width-$#{id}")= i18n.gettext("width")
        td
            input(type="text", id="width-#{id}", value="#{model.getWidth()}")
            | px
    tr
        th
            label(for="height-#{id}")= i18n.gettext("height")
        td
            input(type="text", id="height-#{id}", value="#{model.getHeight()}")
            | px
    tr
        th
            label(for="top-#{id}")= i18n.gettext("top")
        td
            input(type="text", id="top-#{id}", value="#{model.getTop()}")
            | px
    tr
        th
            label(for="left-#{id}")= i18n.gettext("left")
        td
            input(type="text", id="left-#{id}", value="#{model.getLeft()}")
            | px
    tr
        th
            label(for="right-#{id}")= i18n.gettext("right")
        td
            input(type="text", id="right-#{id}", value="#{model.getRight()}")
            | px
    tr
        th
            label(for="bottom-#{id}")= i18n.gettext("bottom")
        td
            input(type="text", id="bottom-#{id}", value="#{model.getBottom()}")
            | px


h3(id="title-#{id}")= model.getType() + '  ' + id
div(id="webvfx-obj-properties-#{id}", class="webvfx-obj-properties", style="display:none")
    if model.isImage() || model.isAnimation()
        fieldset
            table
                tr
                    td(colspan="2", style="text-align:center;padding:5px;")
                        - var size = model.getThumbSize()
                        div(id="image-#{id}", style="margin: 0 auto;background-position:top left;background-repeat:no-repeat;background-image:url(#{model.getImageSrc()});background-size:#{size.width}px #{size.height}px;width:#{size.thumbWidth}px;height:#{size.thumbHeight}px")
                mixin positions
    if model.isWidget()
        fieldset
            table
                if ! model.isBox()
                    tr
                        th
                            label(for="text-#{id}")= i18n.gettext("text")
                        td
                            textarea(id="text-#{id}", style="width:90px;height:60px;font-size:12px")
                                | #{model.getText()}
                mixin positions
                tr
                    th
                        label(for="style-#{id}")= i18n.gettext("style")
                    td
                        select(id="style-#{id}", style="width:90px")
                            option(value='')= i18n.gettext("[select]")
                            each style, name in WebvfxSimpleWidgetStyles
                                option= i18n.gettext(name)
                tr
                    th
                        label(for="border-color-#{id}")= i18n.gettext("border color")
                    td
                        select(id="border-color-#{id}", style="width:90px")
                            option(value='')= i18n.gettext("[select]")
                            for color in colors
                                option #{color}
                if ! model.isBox()
                    tr
                        th
                            label(for="font-size-#{id}")= i18n.gettext("font size")
                        td
                            input(type="text", id="font-size-#{id}", value="#{model.getFontSize()}")
                            | px
                    tr
                        th
                            label(for="color-#{id}")= i18n.gettext("font color")
                        td
                            select(id="color-#{id}", style="width:90px")
                                option(value='')= i18n.gettext("[select]")
                                for color in colors
                                    option #{color}
                    tr
                        th
                            label(for="animation-#{id}")= i18n.gettext("animation")
                        td
                            select(id="animation-#{id}", style="width:90px")
                                for animation in animations
                                    option(selected=model.options.animation == animation) #{animation}
                    tr
                        th
                            label(for="interval-#{id}")= i18n.gettext("interval")
                        td
                            input(type="text", id="interval-#{id}", value="#{model.getInterval()}")
                            | ms

    fieldset
        legend.editor= i18n.gettext("Remove")
        table
            tr
                td.button(colspan="2")
                    button(id="remove-#{id}")= i18n.gettext("remove")
